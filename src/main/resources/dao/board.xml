<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    
<!-- namespace에는 Dao의 패키지명 포함한 인터페이스명과 동일하게 선언해야 
	 mybatis-spring이 Dao에 대한 구현체를 자동으로 생성한다.
-->
<mapper namespace="com.ssafy.tripoline.board.model.dao.BoardDao">    <!--  <== 페키지명만 쓰고 인터페이스명을 안쓰면 오류!!!! 자주하는 실수중 하나임 -->
<!-- 사용가능한 태그명 <insert> <delete> <select> <update> executeUpdate 되는건 동일하지만 구분을 위해서 사용 -->
<!-- parameter타입으로는 1개만 올 수 있음, 여러개를 사용하고싶다면 Dto를 만들거나 Map을 사용해야함 
	 데이터가 1개일때는 바로써도 되지만 일반적으로 매핑시 #{속성명} 사용  
-->

	<resultMap type="Article" id="ArticleDto">
		<id column="article_id" property="articleId" />
		<result column="article_title" property="articleTitle"/>
		<result column="article_content" property="articleContent"/>
		<result column="member_id" property="memberId"/>
		<result column="member_name" property="memberName"/>
		<result column="like_count" property="likeCount"/>
		<result column="view_count" property="viewCount"/>
		<result column="register_time" property="registerTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="category_id" property="categoryId"/>
		<result column="image" property="image"/>
	</resultMap>

	<select id="getArticle" parameterType="int" resultType="Article">
		select *
		from articles
		where article_id = #{articleId}
	</select>

	<select id="searchAll" parameterType="PageBean" resultType="Article">
		select *
		from articles
		order by article_id
	</select>

	<select id="totalCount" parameterType="PageBean" resultType="int">
		select count(*)
		from articles
	</select>
	
	<select id="BestTotalCount" parameterType="PageBean" resultType="int">
		select count(*)
		from articles
		where hit_count >= 0 or like_count >= 0 
	</select>
	
	<select id="categoryCount" parameterType="PageBean" resultType="int">
		select count(*)
		from articles
		where category_id = 1
	</select>
	
	<select id="searchByCategory" parameterType="java.util.Map" resultMap="ArticleDto">
		select *
		from articles
		where category_id = #{categoryId}
		order by article_id
		limit #{bean.start}, #{bean.interval}
	</select>
	
	<select id="getBestAll" parameterType="PageBean" resultType="Article">
		select *
		from articles
		where hit_count >= 0 or like_count >= 0 	
		order by article_id 
	</select>
	
	<insert id="write" parameterType="Article">
	  insert into articles (article_id, article_title, article_content, member_id, member_name, like_count, hit_count, register_time, update_time, category_id, img)
	  values (#{articleId}, #{articleTitle}, #{articleContent}, #{memberId}, #{memberName}, 0, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, #{categoryId}, #{image})
	</insert>


	
	<update id="updateHit" parameterType="int">
		update articles set hit = hit+1
		where article_id = #{articleId}
	</update>
	
	<update id="updatelike" parameterType="int">
		update articles set like = like+1
		where article_id = #{articleId}
	</update>
	
	<update id="update" parameterType="Article">
		update articles set article_id=#{articleId}, article_title=#{articleTitle}, article_content=#{articleContent}, member_id=#{memberId}, member_name=#{memberName}, like=#{like}, hit=#{hit}, register_time=#{registerTime}, update_time=CURRENT_TIMESTAMP, category_id=#{categoryId}, image = #{image}
		where article_id = #{articleId}
	</update>
	
	<delete id="remove" parameterType="int">
		delete from articles
		where article_id = #{articleId}
	</delete>
	
</mapper>    
    
    